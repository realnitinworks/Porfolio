name: Continuous Integration and Delivery

on: [push]

env:
  WEB_IMAGE: docker.pkg.github.com/$GITHUB_REPOSITORY/portfolio
  NGINX_IMAGE: docker.pkg.github.com/$GITHUB_REPOSITORY/nginx

jobs:

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo DEBUG=0 >> .env
          echo PROJECT_ADMIN_URL=${{ secrets.PROJECT_ADMIN_URL }} >> .env
          echo POSTS_PER_PAGE=6 >> .env
          echo SEARCH_RESULTS_PER_PAGE=20 >> .env
          echo COMMENTS_PER_PAGE=10 >> .env
          echo SQL_ENGINE=django.db.backends.postgresql >> .env
          echo DATABASE=postgres >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo SQL_DATABASE=${{ secrets.SQL_DATABASE }} >> .env
          echo SQL_USER=${{ secrets.SQL_USER }} >> .env
          echo SQL_PASSWORD=${{ secrets.SQL_PASSWORD }} >> .env
          echo SQL_HOST=${{ secrets.SQL_HOST }} >> .env
          echo SQL_PORT=${{ secrets.SQL_PORT }} >> .env
          echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
          echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
          echo EMAIL_SENDER_EMAIL=${{ secrets.EMAIL_SENDER_EMAIL }} >> .env
          echo DJANGO_ALLOWED_HOSTS=${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} >> .env
          echo VIRTUAL_HOST=realnitinworks.com,www.realnitinworks.com >> .env
          echo VIRTUAL_PORT=8000 >> .env
          echo LETSENCRYPT_HOST=realnitinworks.com,www.realnitinworks.com >> .env
          echo DEFAULT_EMAIL=nitin.cherian@gmail.com >> .env.companion
          echo NGINX_PROXY_CONTAINER=nginx-proxy >> .env.companion
      - name: Set environment variables
        run: |
          echo ::set-env name=WEB_IMAGE::${{ env.WEB_IMAGE }}
          echo ::set-env name=NGINX_IMAGE::${{ env.NGINX_IMAGE }}
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull images
        run: |
          docker pull ${{ env.WEB_IMAGE }} || true
          docker pull ${{ env.NGINX_IMAGE }} || true
      - name: Build images
        run: |
          docker-compose -f docker-compose.ci.yml build
      - name: Push images
        run: |
          docker push ${{ env.WEB_IMAGE }}
          docker push ${{ env.NGINX_IMAGE }}
    
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo DEBUG=0 >> .env
          echo PROJECT_ADMIN_URL=${{ secrets.PROJECT_ADMIN_URL }} >> .env
          echo POSTS_PER_PAGE=6 >> .env
          echo SEARCH_RESULTS_PER_PAGE=20 >> .env
          echo COMMENTS_PER_PAGE=10 >> .env
          echo SQL_ENGINE=django.db.backends.postgresql >> .env
          echo DATABASE=postgres >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo SQL_DATABASE=${{ secrets.SQL_DATABASE }} >> .env
          echo SQL_USER=${{ secrets.SQL_USER }} >> .env
          echo SQL_PASSWORD=${{ secrets.SQL_PASSWORD }} >> .env
          echo SQL_HOST=${{ secrets.SQL_HOST }} >> .env
          echo SQL_PORT=${{ secrets.SQL_PORT }} >> .env
          echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
          echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
          echo EMAIL_SENDER_EMAIL=${{ secrets.EMAIL_SENDER_EMAIL }} >> .env
          echo WEB_IMAGE=${{ env.WEB_IMAGE }} >> .env
          echo NGINX_IMAGE=${{ env.NGINX_IMAGE }} >> .env 
          echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env
          echo VIRTUAL_HOST=realnitinworks.com,www.realnitinworks.com >> .env
          echo VIRTUAL_PORT=8000 >> .env
          echo LETSENCRYPT_HOST=realnitinworks.com,www.realnitinworks.com >> .env
          echo DEFAULT_EMAIL=nitin.cherian@gmail.com >> .env.companion
          echo NGINX_PROXY_CONTAINER=nginx-proxy >> .env.companion
          echo POSTGRES_USER=${{ secrets.SQL_USER }} >> .env.db
          echo POSTGRES_PASSWORD=${{ secrets.SQL_PASSWORD }} >> .env.db
          echo POSTGRES_DB=${{ secrets.SQL_DATABASE }} >> .env.db
      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"
      - name: Build and deploy images on DigitalOcean
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp  -o StrictHostKeyChecking=no -r ./.env .env.companion ./docker-compose.do.prod.yml root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/app
          scp  -o StrictHostKeyChecking=no -r .env.db root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/app
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
            cd /app
            source .env
            source .env.companion
            source .env.db
            docker login docker.pkg.github.com -u realnitinworks -p ${{ secrets.GITHUBACTION_TOKEN }}
            docker pull $WEB_IMAGE
            docker pull $NGINX_IMAGE
            docker-compose -f docker-compose.do.prod.yml up -d            
          ENDSSH
